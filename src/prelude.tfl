; todo: we should document whether functions are built-in or in the
; prelude.
; todo: the docs should have links to the source code where the
; function/macro was defined.
; todo: docstrings

; todo: macros should probably check argument types to aid debugging
; todoc
; todo: unit test
(macro function (name params :rest body)
  (quote
    (set! (unquote name)
      (lambda (unquote params) (unquote* body))
    )
  )
)

(function list (:rest items) items)

; todo: dec and dec!
(function inc (x) (+ x 1))

(macro inc! (x)
  (quote (set! (unquote x) (inc (unquote x))))
)

(macro for-each (name some-list :rest body)
  (let (index-var (fresh-symbol))
    (quote
      (let ((unquote index-var) 0)
        (while (< (unquote index-var) (length (unquote some-list)))
          (let ((unquote name) (get-index (unquote some-list) (unquote index-var)))
            (unquote* body)
          )
          (inc! (unquote index-var))
        )
      )
    )
  )
)

(function map (func some-list)
  (let (result (list))
    (for-each item some-list
      (push! result (func item) (length result))
    )
    result
  )
)

(function first (list)
  (get-index list 0)
)
(function second (list)
  (get-index list 1)
)
(function third (list)
  (get-index list 2)
)
(function fourth (list)
  (get-index list 3)
)
(function fifth (list)
  (get-index list 4)
)

(function not (value)
  (if value false true)
)
