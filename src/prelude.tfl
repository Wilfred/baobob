; todo: we should document whether functions are built-in or in the prelude.

; todo: write a `function` macro
(set! list
  (lambda (:rest items) items)
)

; todo: implement `let` and use it here
; todo: write in terms of for-each
(set! map
  (lambda (func some-list)
    (set! result (list))
    (set! index 0)
    (while (< index (length some-list))
      (push! result (func (get-index some-list index)) index)
      (set! index (+ index 1))
    )
    result
  )
)

(set! first
  (lambda (list) (get-index list 0))
)
(set! second
  (lambda (list) (get-index list 1))
)
(set! third
  (lambda (list) (get-index list 2))
)
(set! fourth
  (lambda (list) (get-index list 3))
)
(set! fifth
  (lambda (list) (get-index list 4))
)

(set! not
  (lambda (value) (if value false true))
)
