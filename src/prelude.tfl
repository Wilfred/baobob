; todo: we should document whether functions are built-in or in the prelude.

; todo: write a `function` macro
(set! list
  (lambda (:rest items) items)
)

; todo: docstring
; todo: unit test
; todoc
(macro for-each (name some-list :rest body)
  (let (index-var (fresh-symbol))
    (quote
      (let ((unquote index-var) 0)
        (while (< (unquote index-var) (length (unquote some-list)))
          (let ((unquote name) (get-index (unquote some-list) (unquote index-var)))
            (unquote* body)
          )
          (set! (unquote index-var) (+ (unquote index-var) 1))
        )
      )
    )
  )
)

(set! map
  (lambda (func some-list)
    (let (result (list))
      (for-each item some-list
        (push! result (func item) (length result))
      )
      result
    )
  )
)

(set! first
  (lambda (list) (get-index list 0))
)
(set! second
  (lambda (list) (get-index list 1))
)
(set! third
  (lambda (list) (get-index list 2))
)
(set! fourth
  (lambda (list) (get-index list 3))
)
(set! fifth
  (lambda (list) (get-index list 4))
)

(set! not
  (lambda (value) (if value false true))
)
